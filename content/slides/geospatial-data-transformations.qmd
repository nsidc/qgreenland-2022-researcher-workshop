---
title: "Geospatial data transformations"
subtitle: "QGreenland Researcher Workshop 2023"
background-image: "/_media/DMS_1842643_12758_20180418_18111267_clipped.jpg"
title-slide-attributes:
  data-background-image: "/_media/DMS_1842643_12758_20180418_18111267_clipped.jpg"
---

## What tool should I use?

The best one for the job.

Explore the alternatives available in the ecosystem you want to work!

::: {.notes}
You may recognize this slide from the "data inspection" deck.

Tool selection is context-dependent.

Command-line tools are especially useful for getting a quick answer.

Language-specific tools are good for automations or research code. These
examples use Python because that's what we're most familiar with, but explore
your preferred ecosystem and you'll find equivalents.
:::


## TODO

<!-- TODO:
* For each concept, talk about it at a high level, then demo what it looks like for
  raster and vector data.
* Concepts
    * Reprojection
        * On-the-fly reprojection: It's useful, but costly especially for large
          datasets. Could cause unexpected results depending on the level of control
          provided by the viewing application. Unclear how well-supported
          on-the-fly-reprojected layers are in processing toolbox (_TODO: Try this
          out!_).
        * _TODO: consider discussion about characteristics of common
          projections and why you might want to use one over another._
        * Pitfall: Vector geometry can become invalid after reprojection. Raster
          data can have a barely-visible "seam" after reprojection. For example, data
          in EPSG:4326 has edges at the antimeridian, and when reprojecting to 3413
          those edges have to meet somewhere, and at that location you may see a
          "seam". Include a screenshot of this phenomenon in Google Earth.
    * Resampling
    * Subsetting
    * Conversion (raster <-> vector)
        * Do an example of rasterizing categorical vector data; show what happens when
          you interpolate incorrectly. Make this a data scenario. Add categories to data
          scenarios to separate transformation scenarios from metadata scenarios.
    * _TODO: Consider discussion about information loss from common
      transformations (reprojection, resampling, datatype conversion
      (raster<->vector))_
* Tools / Techniques for raster/vector transformations
    * QGIS Processing Toolbox (brief mention, participants should be
      familiar with this from the [beginner tutorial
      series](https://www.youtube.com/watch?v=znKeiV3-Amo&amp;index=5)).
    * gdalwarp, ogr2ogr, ...
    * Python (rasterio, shapely, Xarray, pyresample, PyQGIS, ...)
    * _TODO: create notebook examples for various tools_
* Pitfalls
    * Some metadata in the source data may be carried over to the output,
      resulting in outdated metadata. For example, we have that issue with
      the bedmachine data produced for QGreenland. We can `gdalwarp` a
      bedmachine dataset to WGS84 and observe that the `mapping#` namespace
      continues to specify "polar stereographic" projection. On the plus side,
      citation and other metadata which we want to keep was also pulled over. This
      means you may need to do some manual metadata management when you apply
      transformations. `gdalwarp` has a `-nomd` flag to prevent metadata copying, but
      this can strip away useful metadata!
        * Integrate this pitfall into an example of transforming a raster; e.g. reformat
          a NetCDF and then show the carried-over metadata, especially any fields that
          are now wrong. Demo how to fix that?
-->
