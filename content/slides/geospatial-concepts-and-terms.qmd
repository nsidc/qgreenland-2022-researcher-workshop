<!-- vim: set ft=markdown: -->
---
title: "Review: Foundational geospatial concepts and terms"
subtitle: "QGreenland Researcher Workshop 2023"
background-image: "/_media/DMS_1842643_12758_20180418_18111267_clipped.jpg"
---

# Data

::: {.notes}
Data is actual measurements.

For example, at location (X, Y), the albedo is 39%.
:::


## Vector data

* Point
* Line
* Polygon

![Simple vector map (Wikimedia Commons)](https://upload.wikimedia.org/wikipedia/commons/3/38/Simple_vector_map.svg)

## Vector attributes

Attributes add additional data to a geospatial element

* A point representing a weather station may have a `temperature` attribute
* A polygon representing a state may have a `population` attribute


## Raster data

* Continuous
* Categorical


## Continuous raster data

![Continuous data image](/_media/qgreenland_seaice_concentration_feb2015.png)


## Categorical raster data

![US Land Cover Classification](https://d9-wret.s3.us-west-2.amazonaws.com/assets/palladium/production/s3fs-public/thumbnails/image/NLCD_2016_Landcover.jpg)


## Raster data considerations

* Interpolation
    * Use "nearest neighbor" with categorical data, or there will be "smudging" between
      categories.
* _TODO: What else?_
* _TODO: consider moving this discussion to day 3? This is an operation that is more
  aligned with the goal of preparing data for a specific use case._


## Other data types

We won't focus on these:

* Point cloud
* _TODO: What else?_


# Metadata

::: {.notes}
Metadata is "data about data", and is how standards-compliant data files
"self-describe".

For example, this data is in "North Polar Stereographic" projection.
:::


## Geospatial metadata concepts

* Projection
    * Even latitude/longitude coordinates need metadata (datum), particularly when
      the location data is of a high precision.
* Provenance
* _TODO: More!_


## Metadata standards

* CF conventions for NetCDF data
* _TODO: More!_


## Tools for introspecting metadata

* `ogrinfo`/`gdalinfo`: CLI & Python
* `xarray`: Python
* `ncview`: GUI
* Panoply: GUI
